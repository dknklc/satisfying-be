version: '3'

services:
  mysql-db:
    container_name: mysql-db
    image: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=s3cret
      - MYSQL_DATABASE=satisfyingDB

  zookeeper:
    image: "docker.io/bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: "docker.io/bitnami/kafka:2-debian-10"
    ports:
      - "9092:9092"
    expose:
      - "9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9090:8080"
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181


  kafka_connect:
    container_name: kafka_connect
    image: debezium/connect
    links:
      - mysql-db
      - kafka
    ports:
      - "8083:8083"  # Kafka Connect REST API'ya disaridan erisim saglar.
    environment:
      - BOOTSTRAP_SERVERS=kafka:9093  # Kafka sunucusuna baglanma ayarlarini tanimlar.
      - GROUP_ID=medium_debezium
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses

  elasticsearch:
    image: elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - validate_after_inactivity=0
      - max_open_files=65536
      - max_content_length_in_bytes=100000000
      - transport.host=elasticsearch
      - xpack.security.enabled=false
    volumes:
      - elasticdata-w:/var/app
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.12.2
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - certs-w:/usr/share/kibana/config/certs
      - kibanadata-w:/usr/share/kibana/data
    restart: unless-stopped
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_started


volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  elasticdata-w:
    driver: local
  certs-w:
    driver: local
  kibanadata-w:
    driver: local
